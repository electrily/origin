/*
 * Generated by orval v5.0.0-alpha.9 üç∫
 * Do not edit manually.
 * Origin Backend API
 * Swagger documentation for the Origin Backend API
 * OpenAPI spec version: 0.1
 */
export interface LoginDataDTO {
  username: string;
  password: string;
}

export interface LoginReturnDataDTO {
  accessToken: string;
}

export interface FileUploadDto {
  files: unknown[];
}

export interface FileDto {
  data: unknown;
}

export interface RegisterUserDTO {
  title: string;
  firstName: string;
  lastName: string;
  email: string;
  telephone: string;
  password: string;
}

export type UserStatus = 'Pending' | 'Active' | 'Suspended' | 'Deleted';

export const UserStatus = {
  Pending: 'Pending' as UserStatus,
  Active: 'Active' as UserStatus,
  Suspended: 'Suspended' as UserStatus,
  Deleted: 'Deleted' as UserStatus,
};

export type KYCStatus = 'Pending' | 'Passed' | 'Rejected';

export const KYCStatus = {
  Pending: 'Pending' as KYCStatus,
  Passed: 'Passed' as KYCStatus,
  Rejected: 'Rejected' as KYCStatus,
};

export type OrganizationStatus = 'Submitted' | 'Denied' | 'Active';

export const OrganizationStatus = {
  Submitted: 'Submitted' as OrganizationStatus,
  Denied: 'Denied' as OrganizationStatus,
  Active: 'Active' as OrganizationStatus,
};

export interface PublicOrganizationInfoDTO {
  id: number;
  name: string;
  address: string;
  zipCode: string;
  city: string;
  country: string;
  businessType: string;
  tradeRegistryCompanyNumber: string;
  vatNumber: string;
  status: OrganizationStatus;
}

export interface UserDTO {
  id: number;
  title: string;
  firstName: string;
  lastName: string;
  email: string;
  telephone: string;
  notifications: boolean;
  rights: number;
  status: UserStatus;
  kycStatus: KYCStatus;
  organization: PublicOrganizationInfoDTO;
  emailConfirmed?: boolean;
  blockchainAccountAddress?: string;
  blockchainAccountSignedMessage?: string;
}

export interface UpdateOwnUserSettingsDTO {
  notifications: boolean;
}

export interface UpdateUserProfileDTO {
  firstName: string;
  lastName: string;
  email: string;
  telephone: string;
}

export interface UpdatePasswordDTO {
  oldPassword: string;
  newPassword: string;
}

export interface BindBlockchainAccountDTO {
  signedMessage: string;
}

export interface SuccessResponseDTO {
  success: boolean;
  message?: string;
}

export interface ExternalDeviceIdTypeDTO {
  type: string;
  autogenerated?: boolean;
  required?: boolean;
}

export type ConfigurationDTORegions = {};

export interface ConfigurationDTO {
  countryName?: string;
  currencies?: string[];
  regions?: ConfigurationDTORegions;
  externalDeviceIdTypes?: ExternalDeviceIdTypeDTO[];
  complianceStandard?: string;
  deviceTypes?: string[][];
  gridOperators?: string[];
}

export interface FullOrganizationInfoDTO {
  id: number;
  name: string;
  address: string;
  zipCode: string;
  city: string;
  country: string;
  businessType: string;
  tradeRegistryCompanyNumber: string;
  vatNumber: string;
  status: OrganizationStatus;
  signatoryFullName: string;
  signatoryAddress: string;
  signatoryZipCode: string;
  signatoryCity: string;
  signatoryCountry: string;
  signatoryEmail: string;
  signatoryPhoneNumber: string;
  documentIds?: string[];
  signatoryDocumentIds?: string[];
}

export type OrganizationInvitationStatus =
  | 'Pending'
  | 'Rejected'
  | 'Accepted'
  | 'Viewed';

export const OrganizationInvitationStatus = {
  Pending: 'Pending' as OrganizationInvitationStatus,
  Rejected: 'Rejected' as OrganizationInvitationStatus,
  Accepted: 'Accepted' as OrganizationInvitationStatus,
  Viewed: 'Viewed' as OrganizationInvitationStatus,
};

export interface InvitationDTO {
  id: number;
  email: string;
  role: number;
  status: OrganizationInvitationStatus;
  organization: PublicOrganizationInfoDTO;
  sender: string;
  createdAt: string;
}

//eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface User extends UserDTO {}

export interface NewOrganizationDTO {
  name: string;
  address: string;
  zipCode: string;
  city: string;
  country: string;
  businessType: string;
  tradeRegistryCompanyNumber: string;
  vatNumber: string;
  signatoryFullName: string;
  signatoryAddress: string;
  signatoryZipCode: string;
  signatoryCity: string;
  signatoryCountry: string;
  signatoryEmail: string;
  signatoryPhoneNumber: string;
  documentIds?: string[];
  signatoryDocumentIds?: string[];
}

export interface OrganizationUpdateDTO {
  status: OrganizationStatus;
}

export interface UpdateMemberDTO {
  role: number;
}

export interface InviteDTO {
  email: string;
  role: number;
}

export interface UpdateUserDTO {
  title: string;
  firstName: string;
  lastName: string;
  email: string;
  telephone: string;
  status: UserStatus;
  kycStatus: KYCStatus;
}

export type AdminControllerGetUsersParams = {
  orgName?: string;
  status?: AdminControllerGetUsersStatus;
  kycStatus?: AdminControllerGetUsersKycStatus;
};

export type AdminControllerGetUsersStatus =
  | 'Pending'
  | 'Active'
  | 'Suspended'
  | 'Deleted';

export const AdminControllerGetUsersStatus = {
  Pending: 'Pending' as AdminControllerGetUsersStatus,
  Active: 'Active' as AdminControllerGetUsersStatus,
  Suspended: 'Suspended' as AdminControllerGetUsersStatus,
  Deleted: 'Deleted' as AdminControllerGetUsersStatus,
};

export type AdminControllerGetUsersKycStatus =
  | 'Pending'
  | 'Passed'
  | 'Rejected';

export const AdminControllerGetUsersKycStatus = {
  Pending: 'Pending' as AdminControllerGetUsersKycStatus,
  Passed: 'Passed' as AdminControllerGetUsersKycStatus,
  Rejected: 'Rejected' as AdminControllerGetUsersKycStatus,
};
