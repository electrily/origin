/*
 * Generated by orval v5.0.0-alpha.9 üç∫
 * Do not edit manually.
 * Origin Backend API
 * Swagger documentation for the Origin Backend API
 * OpenAPI spec version: 0.1
 */
import {
  useQuery,
  useMutation,
  UseQueryOptions,
  UseMutationOptions,
} from 'react-query';
import type { ConfigurationDTO } from './originBackendAPI.schemas';
import { customMutator } from '../mutator/custom-mutator';

type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any;

export const configurationControllerGet = <Data = unknown>() => {
  return customMutator<Data extends unknown ? ConfigurationDTO : Data>({
    url: `/api/configuration`,
    method: 'get',
  });
};

export const getConfigurationControllerGetQueryKey = () => [
  `/api/configuration`,
];

export const useConfigurationControllerGet = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
  queryConfig?: UseQueryOptions<
    AsyncReturnType<typeof configurationControllerGet>,
    Error
  >
) => {
  const queryKey = getConfigurationControllerGetQueryKey();

  const query = useQuery<
    AsyncReturnType<typeof configurationControllerGet>,
    Error
  >(queryKey, () => configurationControllerGet<Data>(), queryConfig);

  return {
    queryKey,
    ...query,
  };
};

export const configurationControllerUpdate = <Data = unknown>(
  configurationDTO: ConfigurationDTO
) => {
  return customMutator<Data extends unknown ? ConfigurationDTO : Data>({
    url: `/api/configuration`,
    method: 'put',
    data: configurationDTO,
  });
};

export const useConfigurationControllerUpdate = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
  mutationConfig?: UseMutationOptions<
    AsyncReturnType<typeof configurationControllerUpdate>,
    Error,
    { data: ConfigurationDTO }
  >
) => {
  return useMutation<
    AsyncReturnType<typeof configurationControllerUpdate>,
    Error,
    { data: ConfigurationDTO }
  >((props) => {
    const { data } = props || {};

    return configurationControllerUpdate<Data>(data);
  }, mutationConfig);
};
