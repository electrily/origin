/*
 * Generated by orval v5.0.0-alpha.9 üç∫
 * Do not edit manually.
 * Origin Backend API
 * Swagger documentation for the Origin Backend API
 * OpenAPI spec version: 0.1
 */
import {
  useQuery,
  useMutation,
  UseQueryOptions,
  UseMutationOptions,
} from 'react-query';
import type {
  InvitationDTO,
  SuccessResponseDTO,
  InviteDTO,
  OrganizationInvitationStatus,
} from './originBackendAPI.schemas';
import { customMutator } from '../mutator/custom-mutator';

type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any;

export const invitationControllerGetInvitations = <Data = unknown>() => {
  return customMutator<Data extends unknown ? InvitationDTO[] : Data>({
    url: `/api/invitation`,
    method: 'get',
  });
};

export const getInvitationControllerGetInvitationsQueryKey = () => [
  `/api/invitation`,
];

export const useInvitationControllerGetInvitations = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
  queryConfig?: UseQueryOptions<
    AsyncReturnType<typeof invitationControllerGetInvitations>,
    Error
  >
) => {
  const queryKey = getInvitationControllerGetInvitationsQueryKey();

  const query = useQuery<
    AsyncReturnType<typeof invitationControllerGetInvitations>,
    Error
  >(queryKey, () => invitationControllerGetInvitations<Data>(), queryConfig);

  return {
    queryKey,
    ...query,
  };
};

export const invitationControllerInvite = <Data = unknown>(
  inviteDTO: InviteDTO
) => {
  return customMutator<Data extends unknown ? SuccessResponseDTO : Data>({
    url: `/api/invitation`,
    method: 'post',
    data: inviteDTO,
  });
};

export const useInvitationControllerInvite = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
  mutationConfig?: UseMutationOptions<
    AsyncReturnType<typeof invitationControllerInvite>,
    Error,
    { data: InviteDTO }
  >
) => {
  return useMutation<
    AsyncReturnType<typeof invitationControllerInvite>,
    Error,
    { data: InviteDTO }
  >((props) => {
    const { data } = props || {};

    return invitationControllerInvite<Data>(data);
  }, mutationConfig);
};
export const invitationControllerUpdateInvitation = <Data = unknown>(
  id: string,
  status: OrganizationInvitationStatus
) => {
  return customMutator<Data extends unknown ? SuccessResponseDTO : Data>({
    url: `/api/invitation/${id}/${status}`,
    method: 'put',
    data: undefined,
  });
};

export const useInvitationControllerUpdateInvitation = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
  mutationConfig?: UseMutationOptions<
    AsyncReturnType<typeof invitationControllerUpdateInvitation>,
    Error,
    { id: string; status: OrganizationInvitationStatus }
  >
) => {
  return useMutation<
    AsyncReturnType<typeof invitationControllerUpdateInvitation>,
    Error,
    { id: string; status: OrganizationInvitationStatus }
  >((props) => {
    const { id, status } = props || {};

    return invitationControllerUpdateInvitation<Data>(id, status);
  }, mutationConfig);
};
