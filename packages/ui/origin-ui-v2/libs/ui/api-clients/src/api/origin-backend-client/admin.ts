/*
 * Generated by orval v5.0.0-alpha.9 üç∫
 * Do not edit manually.
 * Origin Backend API
 * Swagger documentation for the Origin Backend API
 * OpenAPI spec version: 0.1
 */
import {
  useQuery,
  useMutation,
  UseQueryOptions,
  UseMutationOptions,
} from 'react-query';
import type {
  UserDTO,
  AdminControllerGetUsersParams,
  UpdateUserDTO,
} from './originBackendAPI.schemas';
import { customMutator } from '../mutator/custom-mutator';

type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any;

export const adminControllerGetUsers = <Data = unknown>(
  params?: AdminControllerGetUsersParams
) => {
  return customMutator<Data extends unknown ? UserDTO[] : Data>({
    url: `/api/admin/users`,
    method: 'get',
    params,
  });
};

export const getAdminControllerGetUsersQueryKey = (
  params?: AdminControllerGetUsersParams
) => [`/api/admin/users`, ...(params ? [params] : [])];

export const useAdminControllerGetUsers = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
  params?: AdminControllerGetUsersParams,
  queryConfig?: UseQueryOptions<
    AsyncReturnType<typeof adminControllerGetUsers>,
    Error
  >
) => {
  const queryKey = getAdminControllerGetUsersQueryKey(params);

  const query = useQuery<
    AsyncReturnType<typeof adminControllerGetUsers>,
    Error
  >(queryKey, () => adminControllerGetUsers<Data>(params), queryConfig);

  return {
    queryKey,
    ...query,
  };
};

export const adminControllerUpdateUser = <Data = unknown>(
  id: number,
  updateUserDTO: UpdateUserDTO
) => {
  return customMutator<Data extends unknown ? UserDTO : Data>({
    url: `/api/admin/users/${id}`,
    method: 'put',
    data: updateUserDTO,
  });
};

export const useAdminControllerUpdateUser = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
  mutationConfig?: UseMutationOptions<
    AsyncReturnType<typeof adminControllerUpdateUser>,
    Error,
    { id: number; data: UpdateUserDTO }
  >
) => {
  return useMutation<
    AsyncReturnType<typeof adminControllerUpdateUser>,
    Error,
    { id: number; data: UpdateUserDTO }
  >((props) => {
    const { id, data } = props || {};

    return adminControllerUpdateUser<Data>(id, data);
  }, mutationConfig);
};
